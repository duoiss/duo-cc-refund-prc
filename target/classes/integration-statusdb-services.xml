<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
    
    <sub-flow name="integration-statusdb-services:createJob">
        <logger message="Start: create new Job in [ISDB]" level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" target="#[payload]" autoGeneratedKeys="true" autoGeneratedKeysColumnIndexes="1" autoGeneratedKeysColumnNames="JobID" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Insert into Job_Queue(fk_IntegrationID, Job_Status_Code)
values (#[flowVars.ISDB_Integration_Code],1)]]></db:parameterized-query>
        </db:insert>
        <set-payload value="#[payload[0].GENERATED_KEY]" doc:name="Set Payload"/>
        <logger message="End: created new Job [#[payload]] in [ISDB]" level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getIntegrationCalendarRunStatus">
        <logger message="Starting Calendar Validation Request...." level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Get Current Calendar">
            <db:parameterized-query><![CDATA[SELECT Count(*) as TotalRecs FROM Integration_Calendar 
inner join Integration_Calendar_Details on Integration_Calendar_Details.fk_Integrations_CalendarID=Integration_Calendar.Integrations_CalendarID
WHERE fk_IntegrationID = #[flowVars.ISDB_Integration_Code] and curdate() > Effective_Start and curdate() < Effective_End and Processing_Date = curdate();]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Calendar Found?">
            <when expression="#[payload[0]['TotalRecs'] &gt; 0]">
                <set-variable variableName="ISDB_Run_Status" value="#[java.lang.Boolean.TRUE]" doc:name="Variable - ISDB_Run_Status"/>
            </when>
            <otherwise>
                <set-variable doc:name="Variable - ISDB_Run_Status" value="#[java.lang.Boolean.FALSE]" variableName="ISDB_Run_Status"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getJobQueueLastChangeDateTime">
        <logger message="Starting retrieval of TP Last Update Date Time" level="INFO" category="${log.category.isdb}" doc:name="Logger"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[Select DATE_FORMAT(Date_Added, '%Y-%m-%dT%H:%i:%sZ') as LastRunDate from Job_Queue where fk_IntegrationID = #[flowVars.ISDB_Integration_Code] and Job_Status_Code = 2  order by Date_Added Desc Limit 1;]]></db:parameterized-query>
        </db:select>
        <logger message="Ending retrieval of TP Last Update Date Time" level="INFO" category="${log.category.isdb}" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getIntegrationEnabledFlag">
        <logger message="Starting Get Integration Enabled Indicator" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select count(*) as Total from Integrations where IntegrationID = #[flowVars.ISDB_Integration_Code] and Enabled = 1]]></db:parameterized-query>
        </db:select>
        <logger message="Ending Get Integration Enabled Indicator" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getIntegrationFeatureFlag">
        <logger message="Starting retrieval of Integration Feature Indicator" level="INFO"  doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="ISDB Integration Feature Flag">
            <db:parameterized-query><![CDATA[select Feature_Enabled, Feature_Value from Integration_Features where fk_IntegrationID = #[flowVars.ISDB_Integration_Code] and Feature_Code = #[flowVars.ISDB_Feature_Code]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[payload.size() != 0]">
                <logger message="Feature Flag found" level="INFO" category="${log.category.isdb}" doc:name="Log - Feature Found"/>
                <choice doc:name="Choice">
                    <when expression="#[payload[0].Feature_Enabled == 1]">
                        <set-session-variable variableName="ISDB_Feature_Enabled" value="#[java.lang.Boolean.TRUE]" doc:name="Session Variable - ISDB_Feature_Enabled"/>
                        <set-session-variable variableName="ISDB_Feature_Value" value="#[payload[0]['Feature_Value']]" doc:name="Session Variable - ISDB_Feature_Value"/>
                    </when>
                    <otherwise>
                        <set-session-variable variableName="ISDB_Feature_Enabled" value="#[java.lang.Boolean.FALSE]" doc:name="Session Variable - ISDB_Feature_Enabled"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <logger message="Ending retrieval of Integration Feature Indicator" level="INFO" category="${log.category.isdb}" doc:name="Log - Feature Not Found"/>
                <set-session-variable variableName="ISDB_Feature_Enabled" value="#[java.lang.Boolean.FALSE]" doc:name="Session Variable - ISDB_Feature_Enabled"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getSyncMode">
        <logger message="Starting Retrieval of Sync Mode" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Get Sync Mode">
            <db:parameterized-query><![CDATA[select Sync_Code as SyncMode from Integrations where IntegrationID = #[flowVars.ISDB_Integration_Code]]]></db:parameterized-query>
        </db:select>
        <logger message="Ending Retrieval of Sync Mode" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getCustomCriteria">
        <logger message="Starting Retrieval of Custom Criteria" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select Custom_Criteria as CustomCriteria from Integrations where IntegrationID = #[flowVars.ISDB_Integration_Code]]]></db:parameterized-query>
        </db:select>
        <logger message="Ending Retrieval of Custom Criteria" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getSyncDate">
        <logger message="Starting Retrieval of Sync Start Date" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Get Sync Date">
            <db:parameterized-query><![CDATA[select DATE_FORMAT(Sync_StartDate, '%Y-%m-%d %H:%i:%s') as SyncDate from Integrations where IntegrationID = #[flowVars.ISDB_Integration_Code]]]></db:parameterized-query>
        </db:select>
        <logger message="Ending Retrieval of Sync Start Date" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getSyncEndDate">
        <logger message="Starting Retrieval of Sync End Date" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select DATE_FORMAT(Sync_EndDate, '%Y-%m-%d %H:%i:%s') as SyncEndDate from Integrations where IntegrationID = #[flowVars.ISDB_Integration_Code]]]></db:parameterized-query>
        </db:select>
        <logger message="Ending Retrieval of Sync Start Date" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:ResetSyncMode">
        <logger message="Starting Sync Mode Reset" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:update config-ref="MySQL_ISDB_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[UPDATE Integrations AS ints
JOIN Integrations i USING (IntegrationID) SET ints.Sync_Code=i.Default_Sync_Code
WHERE ints.IntegrationID = #[flowVars.ISDB_Integration_Code]]]></db:parameterized-query>
        </db:update>
        <logger message="Ending Sync Mode Reset" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:logError">
        <logger message="Start: create new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Insert into Job_Log(fk_JobID, fk_MessageId, Message_Desc, Stack_Dump, Message_Text, Message_Type)
values (#[flowVars.ISDB_JobID], #[flowVars.ISDB_MessageID], #[flowVars.ISDB_MessageDesc], #[flowVars.ISDB_Dump], #[flowVars.ISDB_MessageText], #[flowVars.ISDB_MessageType])]]></db:parameterized-query>
        </db:insert>
        <logger message="End: created new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:logFinancialError">
        <logger message="Start: create new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Insert into Job_Log(fk_JobID, fk_MessageId, Message_Desc, Stack_Dump, Message_Text, Message_Type, Trans_Date, Trans_Amount, Akey, Key_Value, InternalId)
values (#[flowVars.ISDB_JobID], #[flowVars.ISDB_MessageID], #[flowVars.ISDB_MessageDesc], #[flowVars.ISDB_Dump], #[flowVars.ISDB_MessageText], #[flowVars.ISDB_MessageType], #[flowVars.ISDB_TransDate], #[flowVars.ISDB_TransAmount], #[flowVars.ISDB_Akey], #[flowVars.ISDB_Key_Value], #[flowVars.ISDB_InternalId])]]></db:parameterized-query>
        </db:insert>
        <logger message="End: created new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:logFinancialTransInvoiceNums">
        <logger message="Start: create new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Insert into Job_Log(fk_JobID, fk_MessageId, Message_Desc, Stack_Dump, Message_Text, Message_Type, Trans_Date, Trans_Amount, Akey, Key_Value, Trans_ID, Invoice_Num, InternalId)
values (#[flowVars.ISDB_JobID], #[flowVars.ISDB_MessageID], #[flowVars.ISDB_MessageDesc], #[flowVars.ISDB_Dump], #[flowVars.ISDB_MessageText], #[flowVars.ISDB_MessageType], #[flowVars.ISDB_TransDate], #[flowVars.ISDB_TransAmount], #[flowVars.ISDB_Akey], #[flowVars.ISDB_Key_Value], #[flowVars.ISDB_Trans_ID], #[flowVars.ISDB_Invoice_Num], #[flowVars.ISDB_InternalId])]]></db:parameterized-query>
        </db:insert>
        <logger message="End: created new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:updateJobStatus">
        <logger message="Start: update Job [#[flowVars.ISDB_JobID]] status" level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:update config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Update Job_Queue set Job_Status_Code = #[flowVars.ISDB_JobStatus], Date_Completed = Now(),
Total_Records = #[flowVars.ISDB_RecordCount] where JobID = #[flowVars.ISDB_JobID]]]></db:parameterized-query>
        </db:update>
        <logger message="End: updated Job [#[flowVars.ISDB_JobID]] status" level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>
   <sub-flow name="integration-statusdb-services:logBulkFinancialTransInvoiceNums">
        <logger message="Start: create new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - Start" category="${log.category.isdb}"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:dynamic-query><![CDATA[Insert into Job_Log(fk_JobID, fk_MessageId, Message_Desc, Stack_Dump, Message_Text, Message_Type, Trans_Date, Trans_Amount, Akey, Key_Value, Trans_ID, Invoice_Num, InternalId)
values #[flowVars.logBuffer]]]></db:dynamic-query>
        </db:insert>
        <logger message="End: created new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" doc:name="Log - End" category="${log.category.isdb}"/>
    </sub-flow>    
    <sub-flow name="integration-statusdb-services:getResubmissionData">
        <logger level="INFO" doc:name="Log - Start" category="${log.category.isdb}" message="Resubmission request retrieval started"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
            <db:parameterized-query><![CDATA[select SubmissionDetailID, Submission_Value, Submission_Value2, Submission_Value3, Submission_Value4, SubmissionID from Submission_Details Inner Join Submission_Header on Submission_Details.fk_SubmissionID = Submission_Header.SubmissionID  where fk_IntegrationID = #[flowVars.ISDB_Integration_Code] and Status_Code = 1]]></db:parameterized-query>
        </db:select>
        <logger level="INFO" doc:name="Log - Resubmission:payload" category="${log.category.isdb}" message="Resubmission request:#[message.payloadAs(java.lang.String)]"/>
        <choice doc:name="Choice">
            <when expression="#[payload.size() == 0]">
                <logger message="Resubmission request retrieval completed" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
            </when>
            <otherwise>
                <set-variable variableName="submitID" value="#[payload[0].SubmissionID]" doc:name="Variable"/>
                <set-variable variableName="savedetails" value="#[payload]" doc:name="Variable - Save Details"/>
                <db:update config-ref="MySQL_ISDB_Configuration" doc:name="ISDB">
                    <db:parameterized-query><![CDATA[Update Submission_Header set fk_JobID = #[flowVars.ISDB_JobID], Status_Code = 2
 where SubmissionID = #[flowVars.submitID]]]></db:parameterized-query>
                </db:update>
                <set-payload value="#[flowVars.savedetails]" doc:name="Set Payload"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getIntegrationCodeMappings">
        <logger level="INFO" doc:name="Log - Start" category="${log.category.isdb}" message="Starting Getting Code Mappings...."/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Get Integration Code Mapping">
            <db:parameterized-query><![CDATA[SELECT Field_Name as FieldID, Source_Code_Value, Target_Code_Value, Code_Value_Description FROM Integration_CodeMapping 
inner join System_Fields on fk_Source_FieldiD = FieldID
where fk_IntegrationID = #[flowVars.ISDB_Integration_Code];]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{(
payload map {
	($.FieldID ++ $.Source_Code_Value): {
		'Code_Value': $.Target_Code_Value,
		'Code_Desc': $.Code_Value_Description
	}
}
)}]]></dw:set-payload>
        </dw:transform-message>
        <set-session-variable variableName="ISDB_Code_Mappings" value="#[payload]" doc:name="Session Variable - ISDB_Code_Mappings"/>
    </sub-flow>
    <sub-flow name="integration-statusdb-services:getJobQueueLastChangeDate">
        <logger message="Starting retrieval of TP Last Update Date" level="INFO" category="${log.category.isdb}" doc:name="Log - Start"/>
        <db:select config-ref="MySQL_ISDB_Configuration" doc:name="Get TP Last Update Date">
            <db:parameterized-query><![CDATA[Select DATE_FORMAT(DATE_SUB(Date_Added, Interval 1 day), '%Y-%m-%d') as LastRunDate from Job_Queue where fk_IntegrationID = #[flowVars.ISDB_Integration_Code] and  Job_Status_Code = 2  order by Date_Added Desc Limit 1;]]></db:parameterized-query>
        </db:select>
        <logger message="Ending retrieval of TP Last Update Date" level="INFO" category="${log.category.isdb}" doc:name="Log - End"/>
    </sub-flow>  
     <sub-flow name="integration-statusdb-services:logBulkFinancialTransInvoiceNums-bulkMode">
        <logger message="Start: create new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" category="${log.category.isdb}" doc:name="Logger-Start"/>
        <db:insert config-ref="MySQL_ISDB_Configuration" bulkMode="true" doc:name="ISDB">
            <db:parameterized-query><![CDATA[Insert into Job_Log(fk_JobID, fk_MessageID, Message_Desc, Stack_Dump, Message_Text, Message_Type, Trans_Date, Key_Value, Invoice_Num, Trans_Amount, Akey, Trans_ID, InternalId)
values (#[payload.ISDB_JobID], #[payload.ISDB_MessageID], #[payload.ISDB_MessageDesc], #[payload.ISDB_StackDump], #[payload.ISDB_MessageText], #[payload.ISDB_MessageType], #[payload.ISDB_TransDate], #[payload.ISDB_KeyValue], #[payload.ISDB_InvoiceNum], #[payload.ISDB_TransAmount], #[payload.ISDB_Akey], #[payload.ISDB_TransID], #[payload.ISDB_InternalId])]]></db:parameterized-query>
        </db:insert>
        <logger message="End: created new Log for Job [#[flowVars.ISDB_JobID]] in [ISDB] " level="INFO" category="${log.category.isdb}" doc:name="Logger-End"/>
    </sub-flow>
 
</mule>
